---
title: "`{funkyheatmap}`: Visualising data frames with mixed data types"
bibliography: paper/library.bib
---

```{r include=FALSE}
library(languageserver)
library(rmarkdown)
library(lintr)
library(reticulate)
```

`{funkyheatmap}` is a way for creating customisable heatmaps.

## Installation

You can install funkyheatmap like so:

```r
install.packages("funkyheatmap")
```


## Example

Letâ€™s use the `mtcars` dataset as an example of what a funky heatmap looks like.


```{r include=FALSE}
# based on the plot itself
knitr::opts_chunk$set(fig.width = 7.225, fig.height = 10.8)
```


:::{.small}
```{r heatmap, warning=FALSE, message=FALSE}
library(funkyheatmap)
library(dplyr)
library(tibble)

data <- mtcars %>%
  rownames_to_column("id") %>%
  arrange(desc(mpg))

column_info <- tribble(
  ~id,     ~group,         ~name,                      ~geom,        ~palette,    ~options,
  "id",    "",             "",                         "text",       NA,          list(hjust = 0, width = 6),
  "mpg",   "overall",      "Miles / gallon",           "bar",        "palette1",  list(width = 4, legend = FALSE),
  "cyl",   "overall",      "Number of cylinders",      "bar",        "palette2",  list(width = 4, legend = FALSE),
  "disp",  "group1",       "Displacement (cu.in.)",    "funkyrect",  "palette1",  lst(),
  "hp",    "group1",       "Gross horsepower",         "funkyrect",  "palette1",  lst(),
  "drat",  "group1",       "Rear axle ratio",          "funkyrect",  "palette1",  lst(),
  "wt",    "group1",       "Weight (1000 lbs)",        "funkyrect",  "palette1",  lst(),
  "qsec",  "group2",       "1/4 mile time",            "circle",     "palette2",  lst(),
  "vs",    "group2",       "Engine",                   "circle",     "palette2",  lst(),
  "am",    "group2",       "Transmission",             "circle",     "palette2",  lst(),
  "gear",  "group2",       "# Forward gears",          "circle",     "palette2",  lst(),
  "carb",  "group2",       "# Carburetors",            "circle",     "palette2",  lst()
)

funky_heatmap(data, column_info = column_info, expand = list(xmax = 4))
```

:::

## More information 
  
* The [reference documentation](https://funkyheatmap.github.io/funkyheatmap/reference/index.html)
  on `funky_heatmap()` details the exact formats of each annotation object that you can pass to it.

* Check out the vignette [`vignette("mtcars", "funkyheatmap")`](https://funkyheatmap.dynverse.org/articles/mtcars.html) for more information on how to customize this visualisation.

* In [`vignette("dynbenchmark", "funkyheatmap")`](https://funkyheatmap.dynverse.org/articles/dynbenchmark.html) we 
  use funkyheatmap to regenerate the figures from Saelens et al. (2019) [doi:10.1038/s41587-019-0071-9](https://doi.org/10.1038/s41587-019-0071-9).

## Works with funkyheatmap(-like) visualisations

* @comparisonsinglecell_saelens2019
* @benchmarkingatlaslevel_luecken2020
* @benchmarkingsinglecell_mereu2020
* @benchmarkingalgorithmsgene_pratapa2019
* @benchmarkingintegrationmethods_yan2022
* @spotlessreproduciblepipeline_sangaram2023

Create a PR to include your work in this list!