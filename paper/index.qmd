---
title: "funkyheatmap: Visualising data frames with mixed data types"
tags:
  - R
  - benchmarking
  - visualisations
authors:
- name: Robrecht Cannoodt*
  orcid: 0000-0003-3641-729X
  email: robrecht@data-intuitive.com
  affiliations:
    - ref: di
    - ref: dambi
    - ref: twist
- name: Louise Deconinck*
  orcid: 0000-0001-8100-6823
  email: louise.deconinck@ugent.be
  affiliations:
    - ref: dambi
    - ref: twist
- name: Artuur Couckuyt*
  orcid: 0000-0001-7858-6521
  email: artuur.couckuyt@ugent.be
  affiliations:
    - ref: dambi
    - ref: twist
- name: Nikolay S. Markov*
  orcid: 0000-0002-3659-4387
  email: nikolai.markov@icloud.com
  affiliations:
    - ref: nu
- name: Luke Zappia
  orcid: 0000-0001-7744-8565
  affiliations:
    - ref: icb
    - ref: tum-ma
- name: Malte D. Luecken
  orcid: 0000-0001-7464-7921
  affiliations:
    - ref: icb
- name: Marta Interlandi
  orcid: 0000-0002-6863-2552
  email: marta.interlandi01@gmail.com
  affiliations:
    - ref: imi
- name: Wouter Saelens†
  orcid: 0000-0002-7114-6248
  email: w.saelens@epfl.ch
  affiliations:
    - ref: epfl
    - ref: dambi
    - ref: twist
- name: Yvan Saeys†
  orcid: 0000-0002-0415-1506
  email: yvan.saeys@ugent.be
  affiliations:
    - ref: dambi
    - ref: twist
affiliations:
  - id: dambi
    department: Data Mining and Modelling for Biomedicine group
    name: VIB Center for Inflammation Research
    city: Ghent
    country: Belgium
  - id: twist
    department: Department of Applied Mathematics, Computer Science, and Statistics
    name: Ghent University
    city: Ghent
    country: Belgium
  - id: di
    name: Data Intuitive
    city: Lebbeke
    country: Belgium
  - id: epfl
    name: École Polytechnique Fédérale de Lausanne (EPFL)
    department: Institute of Bioengineering, School of Life Sciences
    city: Lausanne
    country: Switzerland
  - id: imi
    department: Institute of Medical Informatics
    name: University of Muenster
    city: Muenster
    country: Germany
  - id: nu
    name: Northwestern University
    department: Division of Pulmonary and Critical Care Medicine
    city: Chicago
    country: USA
  - id: icb
    name: Helmholtz Munich
    department: Institute of Computational Biology, Department of Computational Health
    city: Munich
    country: Germany
  - id: tum-ma
    name: Technical University of Munich
    department: Department of Mathematics, School of Computation, Information and Technology
    city: Munich
    country: Germany
engine: knitr
bibliography: library.bib
---


<!-- 
Submission guidelines: https://joss.readthedocs.io/en/latest/submitting.html.

JOSS welcomes submissions from broadly diverse research areas. For this reason, we require that authors include in the paper some sentences that explain the software functionality and domain of use to a non-specialist reader. We also require that authors explain the research applications of the software. The paper should be between 250-1000 words. Authors submitting papers significantly longer than 1000 words may be asked to reduce the length of their paper.
-->

*: Shared first authors, †: shared last authors.

# Summary
<!-- A summary describing the high-level functionality and purpose of the software for a diverse, non-specialist audience. -->

`{funkyheatmap}` is an innovative R package designed to create publication-ready visualisations of data frames containing a mix of numerical and non-numerical data. Its user-friendly interface makes it easy to generate a visualisation simply by providing the data frame. At the same time, `{funkyheatmap}` also offers flexibility for advanced users to refine their visualisations through row- and column-specific parameters.

The package's simplicity and customizability make it an ideal tool for exploring summarised results in a research setting.
While it has been used extensively to visualise benchmarking results in single-cell omics [@comparisonsinglecell_saelens2019; @benchmarkingatlaslevel_luecken2020; @benchmarkingintegrationmethods_yan2022; @spotlessreproduciblepipeline_sangaram2023; @definingbenchmarkingopen_luecken2023], it's designed to be versatile and applicable to a wide range of other domains.


# Statement of need
<!-- A Statement of need section that clearly illustrates the research purpose of the software and places it in the context of related work. -->

Data visualisation is an essential part of data analysis by revealing patterns, trends, and relationships between variables. Packages like ggplot2 [@ggplot2_wickham2009], Matplotlib [@matplotlib2dgraphics_hunter2007] and D3.js [@d3datadriven_bostock2011] offer an intuitive and flexible interface to generate tailor-made visualisations for many types of use cases, such as dot plots, bar charts, and heatmaps. 

However, these visualisation tools require intricate scripts when visualising data frames with semantically mixed data types, such as textual, categorical, numerical and ratio data. Such data frames, as typically produced by benchmarking studies, require a combination of these heatmaps, dot plots, bar charts, pie charts and images to visualise results comprehensively and correctly. `{funkyheatmap}` addresses this limitation by offering a comprehensive and user-friendly solution for visualising mixed data types in data frames.

The utility of `{funkyheatmap}` was first demonstrated in @comparisonsinglecell_saelens2019 and @benchmarkingatlaslevel_luecken2020, where the unique design concept of funky heatmaps was employed. Since the source code was not available as a standalone R package at that time, several publications adapted the `{funkyheatmap}` design concepts for their visualisations [@benchmarkingsinglecell_mereu2020; @benchmarkingalgorithmsgene_pratapa2019], thus underlining the need for a reusable package for generating funky heatmaps. Since publishing `{funkyheatmap}` on CRAN, `{funkyheatmap}` has been used in several other benchmarking studies to visualise the end-results [@benchmarkingintegrationmethods_yan2022; @spotlessreproduciblepipeline_sangaram2023; @definingbenchmarkingopen_luecken2023], demonstrating its effectiveness and utility in the research community.


# Results

The `{funkyheatmap}` package offers many features designed to customise and enhance the data visualisation process at multiple levels.

The package supports various **geometries** to accurately represent different data types in each column ([@tbl-geoms]). For instance, numerical data can be represented effectively using a funkyrect or bar geom, while measurement data can be displayed using a labelled rectangle geom. Categorical data can be visualised using a text or image geom, and proportional data can be represented using a pie-chart geom.


**Categorical grouping** of rows and columns is supported to separate semantically related rows (e.g. methods) and columns (e.g. metrics and features). It is possible to assign a hierarchical index and different colour palettes to the columns, making these semantic groups more explicit.


```{r echo=FALSE}
#| label: tbl-geoms
#| tbl-cap: "Recommended geometries in `{funkyheatmap}` for different data types. The table presents the suggested visualisation methods (geoms) based on the data type of the columns. These recommendations provide a starting point for users to select the most appropriate visual representation for their specific data."

df <- tibble::tribble(
  ~"Data type", ~Example, ~"Recommended geom",
  "Numerical data", "Scores from 0 to 1", "funkyrect",
  "Aggregated data", "The mean of scores", "bar",
  "Measurement data", "3MB or 4h", "rect + text overlay",
  "Categorical data", "R or Python", "text or image",
  "Proportional data", "80% success, 10% OOM, 10% failed", "pie"
)
knitr::kable(df)
```


## Example

The following figure ([@fig-dynbenchmark]) illustrates the rich and comprehensive visualisations possible with `{funkyheatmap}`, showcasing its capacity to intuitively represent mixed data types in a single heatmap. The heatmap incorporates different geometries, categorical groupings, and colour palettes, providing a clear, informative, and aesthetically pleasing representation of the data.

```{r fig.width=22.1, fig.height=18.14, warning=FALSE}
#| label: fig-dynbenchmark
#| fig-cap: "An example of a `{funkyheatmap}` visualisation using data from a benchmarking study of trajectory inference methods [@comparisonsinglecell_saelens2019]."

library(funkyheatmap)

funky_heatmap(
  data = dynbenchmark_data$data,
  column_info = dynbenchmark_data$column_info,
  column_groups = dynbenchmark_data$column_groups,
  row_info = dynbenchmark_data$row_info,
  row_groups = dynbenchmark_data$row_groups,
  palettes = dynbenchmark_data$palettes,
  col_annot_offset = 3.2
)
```


# Implementation

The `{funkyheatmap}` visualisation tool is developed in the R programming language, leveraging the robust and flexible capabilities of the ggplot2 library [@ggplot2_wickham2009]. The package's design benefits from ggplot2's declarative nature, which simplifies the addition of new geometries to `{funkyheatmap}`.

For user convenience and understanding, we have put together comprehensive documentation resources. These include function-level documentations, which explain how to use public functions, the meaning of function arguments, and their possible values. We also offer detailed, step-by-step vignettes to demonstrate the range of customizations that `{funkyheatmap}` offers.

To ensure the continued quality and reliability of the package, we use the testthat framework for software testing, coupled with continuous integration practices. This combination provides us with a reliable system to catch any potential issues early and maintain the high quality of the software.

Recognizing the wide usage of Python in data analysis, we have also developed a Python version of the package, `funkyheatmappy`. This package utilises the widely used matplotlib library [@matplotlib2dgraphics_hunter2007] for its operations. To maintain consistency between the R and Python versions, we use shared test data across the implementations. This practice ensures that the visualisations produced by both versions are identical.

Lastly, to cater to the increasing demand for interactive data exploration, we are developing `funkyheatmapjs`, a JavaScript version of the tool. This interactive version will provide additional features such as sorting rows by clicking on a column and displaying labels on hover. These developments reinforce our commitment to continuous improvement and meeting the diverse needs of our user base.

# Conclusion
The `{funkyheatmap}` package fills an important gap in the data visualisation landscape, addressing the need for visualising semantically mixed data types in an intuitive and comprehensive manner. With its user-friendly interface and extensive customization options, it provides a solution that is as accessible to novices as it is to experienced data scientists. It has already demonstrated its value across numerous benchmarking studies in the single-cell omics field, yet its potential applications extend well beyond this domain.

The future is promising for `{funkyheatmap}`, with plans for continued enhancements and expansion of its capabilities. The Python package `funkyheatmappy` offers accessibility to Python-based workflows, while the ongoing development of the JavaScript port `funkyheatmapjs`, promises interactive exploration capabilities.


# Acknowledgements
<!-- Acknowledgement of any financial support. -->
The Bavarian Ministry of Science and the Arts in the framework of the Bavarian Research Association “ForInter” (Interaction of human brain cells).

# References
<!-- A list of key references, including to other software addressing related needs. Note that the references should include full names of venues, e.g., journals and conferences, not abbreviations only understood in the context of a specific discipline. -->

```{citations, include=FALSE}
citations:
  ggplot2_wickham2009: 10.1007/978-0-387-98141-3
  matplotlib2dgraphics_hunter2007: 10.1109/MCSE.2007.55
  d3datadriven_bostock2011: 10.1109/TVCG.2011.185
  comparisonsinglecell_saelens2019: 10.1038/s41587-019-0071-9
  benchmarkingatlaslevel_luecken2020: 10.1038/s41592-021-01336-8
  benchmarkingsinglecell_mereu2020: 10.1038/s41587-020-0469-4
  benchmarkingalgorithmsgene_pratapa2019: 10.1101/642926
  benchmarkingintegrationmethods_yan2022: 10.1093/bioinformatics/btac805
  spotlessreproduciblepipeline_sangaram2023: 10.1101/2023.03.22.533802
  definingbenchmarkingopen_luecken2023: |
    @article{definingbenchmarkingopen_luecken2023,
      year = {2023},
      publisher = {In preparation},
      author = {Malte D. Luecken and Scott Gigante and Daniel Burkhardt and Robrecht Cannoodt and Daniel Strobl and Nick Markov and Luke Zappia and \ldots},
      title = {Defining and benchmarking open problems in single-cell data science}
    }
```

