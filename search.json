[
  {
    "objectID": "articles/minimal/index.html",
    "href": "articles/minimal/index.html",
    "title": "Minimal reproducible example",
    "section": "",
    "text": "g &lt;- funkyheatmap::funky_heatmap(\n  data = data,\n  column_info = column_info,\n  column_groups = column_groups,\n  row_info = row_info,\n  row_groups = row_groups,\n  palettes = palettes\n)\n\nℹ Column info did not contain a column called 'legend', generating options based on the 'geom' column.\n\n\n! Package `magick` is required to draw images. Skipping columns with geom == \"image\".\n\n\n\ng"
  },
  {
    "objectID": "articles/minimal/index.html#funkyheatmap-in-r",
    "href": "articles/minimal/index.html#funkyheatmap-in-r",
    "title": "Minimal reproducible example",
    "section": "",
    "text": "g &lt;- funkyheatmap::funky_heatmap(\n  data = data,\n  column_info = column_info,\n  column_groups = column_groups,\n  row_info = row_info,\n  row_groups = row_groups,\n  palettes = palettes\n)\n\nℹ Column info did not contain a column called 'legend', generating options based on the 'geom' column.\n\n\n! Package `magick` is required to draw images. Skipping columns with geom == \"image\".\n\n\n\ng"
  },
  {
    "objectID": "articles/minimal/index.html#funkyheatmap-js-in-javascript",
    "href": "articles/minimal/index.html#funkyheatmap-js-in-javascript",
    "title": "Minimal reproducible example",
    "section": "funkyheatmap-js in JavaScript",
    "text": "funkyheatmap-js in JavaScript\n\nviewof color_by_rank = Inputs.toggle({label: \"Color by rank\"})\nviewof scale_column = Inputs.toggle({label: \"Minmax column\"})\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunkyheatmap(\n  funky_heatmap_args.data,\n  // TODO: remove columns, since this information is available in column info\n  funky_heatmap_args.columns,\n  funky_heatmap_args.column_info,\n  funky_heatmap_args.column_groups,\n  // TODO: uncomment row_info and row_groups\n  // funky_heatmap_args.row_info,\n  // funky_heatmap_args.row_groups,\n  funky_heatmap_args.palettes,\n  // TODO: align the parameters below with R\n  funky_heatmap_args.expand, \n  funky_heatmap_args.col_annot_offset,\n  funky_heatmap_args.add_abc,\n  scale_column,\n  {\n    fontSize: 14,\n    rowHeight: 26,\n    rootStyle: 'max-width: none',\n    colorByRank: color_by_rank,\n    theme: {\n        oddRowBackground: 'var(--bs-body-bg)',\n        evenRowBackground: 'var(--bs-button-hover)',\n        textColor: 'var(--bs-body-color)',\n        strokeColor: 'var(--bs-body-color)',\n        headerColor: 'var(--bs-white)',\n        hoverColor: 'var(--bs-body-color)'\n    }\n  }\n);\n\n\n\n\n\n\n\nfunkyheatmap = (await require('d3@7').then(d3 =&gt; {\n  window.d3 = d3;\n  window._ = _;\n  return import('https://unpkg.com/funkyheatmap-js@0.1.8');\n})).default;"
  },
  {
    "objectID": "articles/minimal/index.html#funkyheatmappy-in-python",
    "href": "articles/minimal/index.html#funkyheatmappy-in-python",
    "title": "Minimal reproducible example",
    "section": "funkyheatmappy in Python",
    "text": "funkyheatmappy in Python\n\n# TODO: remove workaround\ncolumn_info.index = column_info[\"id\"]\ncolumn_info[\"name\"] = [ \"\" if not isinstance(name, str) else name for name in column_info[\"name\"] ]\nrow_info.index = row_info[\"id\"]\n\n# TODO: remove another workaround\ncolumn_info = column_info[column_info[\"geom\"] != \"image\"]\ncolumn_groups = column_groups[column_groups[\"group\"] != \"image\"]\n\nfunky_heatmap(\n  data=data,\n  column_info=column_info,\n  column_groups=column_groups,\n  row_info=row_info,\n  row_groups=row_groups,\n  palettes=palettes,\n)"
  },
  {
    "objectID": "articles/example_dynbenchmark/index.html",
    "href": "articles/example_dynbenchmark/index.html",
    "title": "Example: dynbenchmark",
    "section": "",
    "text": "In this vignette, we will use funkyheatmap to reproduce the figures by Saelens et al. (2019)."
  },
  {
    "objectID": "articles/example_dynbenchmark/index.html#load-data",
    "href": "articles/example_dynbenchmark/index.html#load-data",
    "title": "Example: dynbenchmark",
    "section": "Load data",
    "text": "Load data\nThis data was generated by running the data-raw/dynbenchmark_data.R script. It fetches the latest results from the dynbenchmark_results repository and stores the data inside the funkyheatmap package.\n\nlibrary(funkyheatmap)\nlibrary(kableExtra)\n\ndata(\"dynbenchmark_data\")"
  },
  {
    "objectID": "articles/example_dynbenchmark/index.html#process-results",
    "href": "articles/example_dynbenchmark/index.html#process-results",
    "title": "Example: dynbenchmark",
    "section": "Process results",
    "text": "Process results\nThe results data is one big data frame.\n\ndata &lt;- dynbenchmark_data$data\nprint(data[,1:12])\n\n# A tibble: 51 × 12\n   id               method_name method_source tool_id method_platform method_url\n   &lt;chr&gt;            &lt;chr&gt;       &lt;chr&gt;         &lt;chr&gt;   &lt;chr&gt;           &lt;chr&gt;     \n 1 paga             PAGA        tool          paga    Python          https://g…\n 2 raceid_stemid    RaceID / S… tool          raceid… R               https://g…\n 3 slicer           SLICER      tool          slicer  R               https://g…\n 4 slingshot        Slingshot   tool          slings… R               https://g…\n 5 paga_tree        PAGA Tree   tool          paga    Python          https://g…\n 6 projected_sling… Projected … tool          slings… R               https://g…\n 7 mst              MST         offtheshelf   mst     R               &lt;NA&gt;      \n 8 monocle_ica      Monocle ICA tool          monocle R               https://g…\n 9 monocle_ddrtree  Monocle DD… tool          monocle R               https://g…\n10 pcreode          pCreode     tool          pcreode Python          https://g…\n# ℹ 41 more rows\n# ℹ 6 more variables: method_license &lt;chr&gt;, method_authors &lt;list&gt;,\n#   method_description &lt;chr&gt;, wrapper_input_required &lt;list&gt;,\n#   wrapper_input_optional &lt;list&gt;, wrapper_type &lt;chr&gt;\n\n\nChoose a few columns to preview.\n\npreview_cols &lt;- c(\n  \"id\",\n  \"method_source\",\n  \"method_platform\",\n  \"benchmark_overall_norm_correlation\",\n  \"benchmark_overall_norm_featureimp_wcor\",\n  \"benchmark_overall_norm_F1_branches\",\n  \"benchmark_overall_norm_him\",\n  \"benchmark_overall_overall\"\n)\nprint(data[,preview_cols])\n\n# A tibble: 51 × 8\n   id                  method_source method_platform benchmark_overall_norm_co…¹\n   &lt;chr&gt;               &lt;chr&gt;         &lt;chr&gt;                                 &lt;dbl&gt;\n 1 paga                tool          Python                                0.650\n 2 raceid_stemid       tool          R                                     0.539\n 3 slicer              tool          R                                     0.139\n 4 slingshot           tool          R                                     0.740\n 5 paga_tree           tool          Python                                0.688\n 6 projected_slingshot tool          R                                     0.655\n 7 mst                 offtheshelf   R                                     0.610\n 8 monocle_ica         tool          R                                     0.629\n 9 monocle_ddrtree     tool          R                                     0.731\n10 pcreode             tool          Python                                0.646\n# ℹ 41 more rows\n# ℹ abbreviated name: ¹​benchmark_overall_norm_correlation\n# ℹ 4 more variables: benchmark_overall_norm_featureimp_wcor &lt;dbl&gt;,\n#   benchmark_overall_norm_F1_branches &lt;dbl&gt;, benchmark_overall_norm_him &lt;dbl&gt;,\n#   benchmark_overall_overall &lt;dbl&gt;\n\n\nIt’s possible to use funky_heatmap() to visualise the data frame without providing additional metadata, but it will likely not have any of the desired formatting.\n\ng &lt;- funky_heatmap(data[,preview_cols])\n\n\ng"
  },
  {
    "objectID": "articles/example_dynbenchmark/index.html#process-column-info",
    "href": "articles/example_dynbenchmark/index.html#process-column-info",
    "title": "Example: dynbenchmark",
    "section": "Process column info",
    "text": "Process column info\nApart from the results themselves, the most important additional info is the column info. This data frame contains information on how each column should be formatted.\n\ncolumn_info &lt;- dynbenchmark_data$column_info\nprint(column_info)\n\n# A tibble: 65 × 6\n   group                 id                     name  geom  palette options     \n   &lt;chr&gt;                 &lt;chr&gt;                  &lt;chr&gt; &lt;chr&gt; &lt;chr&gt;   &lt;list&gt;      \n 1 method_characteristic method_name            \"\"    text  &lt;NA&gt;    &lt;named list&gt;\n 2 method_characteristic method_priors_require… \"Pri… text  &lt;NA&gt;    &lt;named list&gt;\n 3 method_characteristic method_wrapper_type    \"Wra… text  &lt;NA&gt;    &lt;named list&gt;\n 4 method_characteristic method_platform        \"Pla… text  &lt;NA&gt;    &lt;named list&gt;\n 5 method_characteristic method_topology_infer… \"Top… text  &lt;NA&gt;    &lt;named list&gt;\n 6 score_overall         summary_overall_overa… \"Ove… bar   overall &lt;named list&gt;\n 7 score_overall         benchmark_overall_ove… \"Acc… bar   benchm… &lt;named list&gt;\n 8 score_overall         scaling_pred_overall_… \"Sca… bar   scaling &lt;named list&gt;\n 9 score_overall         stability_overall_ove… \"Sta… bar   stabil… &lt;named list&gt;\n10 score_overall         qc_overall_overall     \"Usa… bar   qc      &lt;named list&gt;\n# ℹ 55 more rows\n\n\nWith just the data and the column info, we can already get a pretty good funky heatmap:\n\ng &lt;- funky_heatmap(data, column_info = column_info)\n\n\ng\n\nWarning: Removed 17 rows containing missing values (`geom_rect()`)."
  },
  {
    "objectID": "articles/example_dynbenchmark/index.html#finetuning-the-visualisation",
    "href": "articles/example_dynbenchmark/index.html#finetuning-the-visualisation",
    "title": "Example: dynbenchmark",
    "section": "Finetuning the visualisation",
    "text": "Finetuning the visualisation\nThe figure can be finetuned by grouping the columns and rows and specifying custom palettes.\nColumn grouping:\n\ncolumn_groups &lt;- dynbenchmark_data$column_groups\nprint(column_groups)\n\n# A tibble: 10 × 4\n   Experiment  Category                                 group            palette\n   &lt;chr&gt;       &lt;chr&gt;                                    &lt;chr&gt;            &lt;chr&gt;  \n 1 Method      \"\\n\"                                     method_characte… overall\n 2 Summary     \"Aggregated scores per experiment\"       score_overall    overall\n 3 Accuracy    \"Per metric\"                             benchmark_metric benchm…\n 4 Accuracy    \"Per dataset source\"                     benchmark_source benchm…\n 5 Accuracy    \"Per trajectory type\"                    benchmark_trajt… benchm…\n 6 Accuracy    \"Errors\"                                 benchmark_execu… benchm…\n 7 Scalability \"Predicted time\\n(#cells × #features)\"   scaling_predtime scaling\n 8 Scalability \"Predicted memory\\n(#cells × #features)\" scaling_predmem  scaling\n 9 Stability   \"Similarity\\nbetween runs\"               stability        stabil…\n10 Usability   \"Quality of\\nsoftware and paper\"         qc_category      qc     \n\n\nRow info:\n\nrow_info &lt;- dynbenchmark_data$row_info\nprint(row_info)\n\n# A tibble: 51 × 2\n   group id                 \n   &lt;fct&gt; &lt;chr&gt;              \n 1 graph paga               \n 2 graph raceid_stemid      \n 3 graph slicer             \n 4 tree  slingshot          \n 5 tree  paga_tree          \n 6 tree  projected_slingshot\n 7 tree  mst                \n 8 tree  monocle_ica        \n 9 tree  monocle_ddrtree    \n10 tree  pcreode            \n# ℹ 41 more rows\n\n\nRow grouping:\n\nrow_groups &lt;- dynbenchmark_data$row_groups\nprint(row_groups)\n\n# A tibble: 6 × 2\n  group          Group                 \n  &lt;fct&gt;          &lt;chr&gt;                 \n1 graph          Graph methods         \n2 tree           Tree methods          \n3 multifurcation Multifurcation methods\n4 bifurcation    Bifurcation methods   \n5 linear         Linear methods        \n6 cycle          Cyclic methods        \n\n\nPalettes:\n\npalettes &lt;- dynbenchmark_data$palettes\nprint(palettes)\n\n# A tibble: 7 × 2\n  palette       colours    \n  &lt;chr&gt;         &lt;list&gt;     \n1 overall       &lt;chr [101]&gt;\n2 benchmark     &lt;chr [101]&gt;\n3 scaling       &lt;chr [101]&gt;\n4 stability     &lt;chr [101]&gt;\n5 qc            &lt;chr [101]&gt;\n6 error_reasons &lt;chr [4]&gt;  \n7 white6black4  &lt;chr [10]&gt;"
  },
  {
    "objectID": "articles/example_dynbenchmark/index.html#generate-funky-heatmap",
    "href": "articles/example_dynbenchmark/index.html#generate-funky-heatmap",
    "title": "Example: dynbenchmark",
    "section": "Generate funky heatmap",
    "text": "Generate funky heatmap\nThe resulting visualisation contains all of the results by Saelens et al. (2019) in a single plot.\nNote that Figures 2 and 3 from the main paper and Supplementary Figure 2 were generated by making different subsets of the column_info and column_groups objects.\n\ng &lt;- funky_heatmap(\n  data = data,\n  column_info = column_info,\n  column_groups = column_groups,\n  row_info = row_info,\n  row_groups = row_groups,\n  palettes = palettes,\n  col_annot_offset = 3.2\n)\n\nWarning in funky_heatmap(data = data, column_info = column_info, column_groups\n= column_groups, : Argument `col_annot_offset` is deprecated. Use\n`position_arguments(col_annot_offset = ...)` instead.\n\n\n\ng\n\nWarning: Removed 17 rows containing missing values (`geom_rect()`).\n\n\n\n\n\nfunkyheatmap automatically recommends a width and height for the generated plot. To save your plot, run:\nggsave(\"path_to_plot.pdf\", g, device = cairo_pdf, width = g$width, height = g$height)"
  },
  {
    "objectID": "paper/index.html",
    "href": "paper/index.html",
    "title": "funkyheatmap: Visualising data frames with mixed data types",
    "section": "",
    "text": "*: Shared first authors, †: shared last authors."
  },
  {
    "objectID": "paper/index.html#example",
    "href": "paper/index.html#example",
    "title": "funkyheatmap: Visualising data frames with mixed data types",
    "section": "Example",
    "text": "Example\nThe following figure (Figure 1) illustrates the rich and comprehensive visualisations possible with {funkyheatmap}, showcasing its capacity to intuitively represent mixed data types in a single heatmap. The heatmap incorporates different geometries, categorical groupings, and colour palettes, providing a clear, informative, and aesthetically pleasing representation of the data.\n\nlibrary(funkyheatmap)\n\nfunky_heatmap(\n  data = dynbenchmark_data$data,\n  column_info = dynbenchmark_data$column_info,\n  column_groups = dynbenchmark_data$column_groups,\n  row_info = dynbenchmark_data$row_info,\n  row_groups = dynbenchmark_data$row_groups,\n  palettes = dynbenchmark_data$palettes,\n  col_annot_offset = 3.2\n)\n\n\n\n\nFigure 1: An example of a {funkyheatmap} visualisation using data from a benchmarking study of trajectory inference methods (Saelens et al. 2019)."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "{funkyheatmap}: Visualising data frames with mixed data types",
    "section": "",
    "text": "{funkyheatmap} is a way for creating customisable heatmaps."
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "{funkyheatmap}: Visualising data frames with mixed data types",
    "section": "Installation",
    "text": "Installation\nYou can install funkyheatmap like so:\ninstall.packages(\"funkyheatmap\")"
  },
  {
    "objectID": "index.html#example",
    "href": "index.html#example",
    "title": "{funkyheatmap}: Visualising data frames with mixed data types",
    "section": "Example",
    "text": "Example\nLet’s use the mtcars dataset as an example of what a funky heatmap looks like.\n\n\nlibrary(funkyheatmap)\nlibrary(dplyr)\nlibrary(tibble)\n\ndata &lt;- mtcars %&gt;%\n  rownames_to_column(\"id\") %&gt;%\n  arrange(desc(mpg))\n\ncolumn_info &lt;- tribble(\n  ~id,     ~group,         ~name,                      ~geom,        ~palette,    ~options,\n  \"id\",    \"\",             \"\",                         \"text\",       NA,          list(hjust = 0, width = 6),\n  \"mpg\",   \"overall\",      \"Miles / gallon\",           \"bar\",        \"palette1\",  list(width = 4, legend = FALSE),\n  \"cyl\",   \"overall\",      \"Number of cylinders\",      \"bar\",        \"palette2\",  list(width = 4, legend = FALSE),\n  \"disp\",  \"group1\",       \"Displacement (cu.in.)\",    \"funkyrect\",  \"palette1\",  lst(),\n  \"hp\",    \"group1\",       \"Gross horsepower\",         \"funkyrect\",  \"palette1\",  lst(),\n  \"drat\",  \"group1\",       \"Rear axle ratio\",          \"funkyrect\",  \"palette1\",  lst(),\n  \"wt\",    \"group1\",       \"Weight (1000 lbs)\",        \"funkyrect\",  \"palette1\",  lst(),\n  \"qsec\",  \"group2\",       \"1/4 mile time\",            \"circle\",     \"palette2\",  lst(),\n  \"vs\",    \"group2\",       \"Engine\",                   \"circle\",     \"palette2\",  lst(),\n  \"am\",    \"group2\",       \"Transmission\",             \"circle\",     \"palette2\",  lst(),\n  \"gear\",  \"group2\",       \"# Forward gears\",          \"circle\",     \"palette2\",  lst(),\n  \"carb\",  \"group2\",       \"# Carburetors\",            \"circle\",     \"palette2\",  lst()\n)\n\nfunky_heatmap(data, column_info = column_info, expand = list(xmax = 4))"
  },
  {
    "objectID": "index.html#more-information",
    "href": "index.html#more-information",
    "title": "{funkyheatmap}: Visualising data frames with mixed data types",
    "section": "More information",
    "text": "More information\n\nThe reference documentation on funky_heatmap() details the exact formats of each annotation object that you can pass to it.\nCheck out the vignette vignette(\"mtcars\", \"funkyheatmap\") for more information on how to customize this visualisation.\nIn vignette(\"dynbenchmark\", \"funkyheatmap\") we use funkyheatmap to regenerate the figures from Saelens et al. (2019) doi:10.1038/s41587-019-0071-9."
  },
  {
    "objectID": "index.html#works-with-funkyheatmap-like-visualisations",
    "href": "index.html#works-with-funkyheatmap-like-visualisations",
    "title": "{funkyheatmap}: Visualising data frames with mixed data types",
    "section": "Works with funkyheatmap(-like) visualisations",
    "text": "Works with funkyheatmap(-like) visualisations\n\nSaelens et al. (2019)\nLuecken et al. (2021)\nMereu et al. (2020)\nPratapa et al. (2019)\nYan and Sun (2022)\nSang-aram et al. (2023)\n\nCreate a PR to include your work in this list!"
  },
  {
    "objectID": "features.html",
    "href": "features.html",
    "title": "Features",
    "section": "",
    "text": "This is a high-level overview of the features available in funkyheatmap. This section will be updated such that only a checkmark appears if all of the unit tests have been implemented and succeed.\nid\ndescription\nR\nPython\nJS\n\n\n\n\nData input\nAllows for input of a data frame with items by row and features in the columns.\n✓\n✓\n✓\n\n\nColumn info\nProvides customization of columns, including geom, group, palette, and more.\n✓\n✓\n✓\n\n\nRow info\nAllows for grouping and annotating rows.\n✓\n✓\n\n\n\nColumn groups\nAllows for grouping and annotating column groups.\n✓\n✓\n✓\n\n\nRow groups\nAllows for grouping and annotating row groups.\n✓\n✓\n\n\n\nPalettes\nSupports custom and standard color palettes for the heatmap.\n✓\n✓\n±\n\n\nGeom: funkyrect\nSupports ‘funkyrect’ geometry.\n✓\n✓\n✓\n\n\nGeom: circle\nSupports ‘circle’ geometry.\n✓\n✓\n✓\n\n\nGeom: rect\nSupports ‘rect’ geometry.\n✓\n✓\n\n\n\nGeom: bar\nSupports ‘bar’ geometry.\n✓\n✓\n✓\n\n\nGeom: pie\nSupports ‘pie’ geometry.\n✓\n✓\n\n\n\nGeom: text\nSupports ‘text’ geometry.\n✓\n✓\n✓\n\n\nGeom: image\nSupports ‘image’ geometry.\n✓\n✓\n\n\n\nNumerical transformations\nProvides transformation capabilities for numerical columns.\n✓\n✓\n✓\n\n\nPositioning options\nOptions to control the positioning of various elements in the plot.\n✓\n✓\n✓\n\n\nSubfigure labels\nEnables adding subfigure labels to different column groups.\n✓\n✓\n✓\n\n\nRemoved entries\nSupports removing specified entries from rows and replacing them with a label.\n✓\n✓\n\n\n\nLabel on hover\nAllow hovering over a result to see a label\n\n\n✓"
  },
  {
    "objectID": "features.html#unit-tests",
    "href": "features.html#unit-tests",
    "title": "Features",
    "section": "Unit tests",
    "text": "Unit tests\nThis table will be used to check whether each of these tests were implemented in each of the different funkyheatmap implementations.\n\n\n\n\n\n\n\n\n\n\nname\nfeature_id\ndescription\n\n\n\n\nTest data input validity\nData input\nTest whether the function handles valid data frame input correctly.\n\n\nTest data input error handling\nData input\nTest the function’s error handling when provided with an invalid data frame input.\n\n\nTest column info validity\nColumn info\nTest if the function processes valid column information correctly.\n\n\nTest column info error handling\nColumn info\nTest the function’s error handling when provided with invalid column information.\n\n\nTest row info validity\nRow info\nTest if the function processes valid row information correctly.\n\n\nTest row info error handling\nRow info\nTest the function’s error handling when provided with invalid row information.\n\n\nTest column groups validity\nColumn groups\nTest if the function processes valid column groups correctly.\n\n\nTest column groups error handling\nColumn groups\nTest the function’s error handling when provided with invalid column groups.\n\n\nTest row groups validity\nRow groups\nTest if the function processes valid row groups correctly.\n\n\nTest row groups error handling\nRow groups\nTest the function’s error handling when provided with invalid row groups.\n\n\nTest palette custom validity\nPalettes\nTest if the function handles valid custom palettes correctly.\n\n\nTest palette standard validity\nPalettes\nTest if the function handles valid standard palettes correctly.\n\n\nTest palette error handling\nPalettes\nTest the function’s error handling when provided with invalid palettes.\n\n\nTest geom funkyrect validity\nGeom: funkyrect\nTest if the function correctly renders ‘funkyrect’ geometry.\n\n\nTest geom circle validity\nGeom: circle\nTest if the function correctly renders ‘circle’ geometry.\n\n\nTest geom rect validity\nGeom: rect\nTest if the function correctly renders ‘rect’ geometry.\n\n\nTest geom bar validity\nGeom: bar\nTest if the function correctly renders ‘bar’ geometry.\n\n\nTest geom pie validity\nGeom: pie\nTest if the function correctly renders ‘pie’ geometry.\n\n\nTest geom text validity\nGeom: text\nTest if the function correctly renders ‘text’ geometry.\n\n\nTest geom image validity\nGeom: image\nTest if the function correctly renders ‘image’ geometry.\n\n\nTest numerical transformations\nNumerical transformations\nTest if the function applies numerical transformations correctly.\n\n\nTest positioning options\nPositioning options\nTest if the function handles positioning options like hjust, vjust, size, label correctly.\n\n\nTest subfigure labels\nSubfigure labels\nTest if the function correctly adds subfigure labels to different column groups.\n\n\nTest removed entries\nRemoved entries\nTest if the function correctly removes specified entries from rows and replaces them with a label.\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nStill need to implement each of these unit tests. The labels might need to be renamed accordingly."
  },
  {
    "objectID": "articles/example_mtcars/index.html",
    "href": "articles/example_mtcars/index.html",
    "title": "Example: mtcars",
    "section": "",
    "text": "Load data\nlibrary(funkyheatmap)\nlibrary(dplyr, warn.conflicts = FALSE)\nlibrary(tibble, warn.conflicts = FALSE)\nlibrary(purrr, warn.conflicts = FALSE)\n\ndata(\"mtcars\")\n\ndata &lt;- mtcars %&gt;% \n  rownames_to_column(\"id\") %&gt;%\n  arrange(desc(mpg)) %&gt;%\n  head(20) %&gt;%\n  mutate(type = c(rep(\"images/ice.png\", 10), rep(\"images/electric.png\", 10)))\nWe can plot this data frame without any additional formatting, though it doesn’t look very nice:\nfunky_heatmap(data)\n\nℹ No column info was provided, assuming all columns in `data` are to be plotted.\n\n\nℹ Column info did not contain column `name`, using `id` to generate it.\n\n\nℹ Column info did not contain information on which columns to plot, inferring from `data` types.\n\n\nℹ Column info did not contain group information, assuming columns are ungrouped.\n\n\nℹ Column info did not contain a column called 'palette', generating palettes based on the 'geom' column.\n\n\nℹ Column info did not contain a column called 'width', generating options based on the 'geom' column.\n\n\nℹ Column info did not contain a column called 'legend', generating options based on the 'geom' column.\n\n\nℹ No row info was provided, assuming all rows in `data` are to be plotted.\n\n\nℹ Row info did not contain group information, assuming rows are ungrouped.\n\n\nℹ No palettes were provided, trying to automatically assign palettes.\n\n\nℹ Palette named 'numerical_palette' was not defined. Assuming palette is numerical. Automatically selected palette 'Blues'.\nBy defining a few additional formatting parameters, we can get the plot to look much nicer."
  },
  {
    "objectID": "articles/example_mtcars/index.html#column-info",
    "href": "articles/example_mtcars/index.html#column-info",
    "title": "Example: mtcars",
    "section": "Column info",
    "text": "Column info\n\ncolumn_info &lt;- tribble(\n  ~id,     ~group,         ~name,                      ~geom,        ~palette,    ~options,\n  \"id\",    NA,             \"\",                         \"text\",       NA,          list(hjust = 0, width = 6),\n  \"mpg\",   \"overall\",      \"Miles / gallon\",           \"bar\",        \"palette1\",  list(width = 4, legend = FALSE),\n  \"cyl\",   \"overall\",      \"Number of cylinders\",      \"bar\",        \"palette2\",  list(width = 4, legend = FALSE),\n  \"disp\",  \"group1\",       \"Displacement (cu.in.)\",    \"funkyrect\",  \"palette1\",  lst(),\n  \"hp\",    \"group1\",       \"Gross horsepower\",         \"funkyrect\",  \"palette1\",  lst(),\n  \"drat\",  \"group1\",       \"Rear axle ratio\",          \"funkyrect\",  \"palette1\",  lst(),\n  \"wt\",    \"group1\",       \"Weight (1000 lbs)\",        \"funkyrect\",  \"palette1\",  lst(),\n  \"qsec\",  \"group2\",       \"1/4 mile time\",            \"circle\",     \"palette2\",  lst(),\n  \"vs\",    \"group2\",       \"Engine\",                   \"circle\",     \"palette2\",  lst(),\n  \"am\",    \"group2\",       \"Transmission\",             \"circle\",     \"palette2\",  lst(),\n  \"gear\",  \"group2\",       \"# Forward gears\",          \"circle\",     \"palette2\",  lst(),\n  \"carb\",  \"group2\",       \"# Carburetors\",            \"circle\",     \"palette2\",  lst(),\n  \"type\",  \"group2\",       \"Type of engine\",           \"image\",      NA,          lst()\n)\n\nDefine column groups\n\ncolumn_groups &lt;- tribble( # tribble_start\n  ~Category,  ~group,         ~palette,\n  \"Overall\",  \"overall\",      \"overall\",\n  \"Group 1\",  \"group1\",       \"palette1\",\n  \"Group 2\",  \"group2\",       \"palette2\"\n) # tribble_end"
  },
  {
    "objectID": "articles/example_mtcars/index.html#row-info",
    "href": "articles/example_mtcars/index.html#row-info",
    "title": "Example: mtcars",
    "section": "Row info",
    "text": "Row info\nDetermine method grouping\n\nrow_info &lt;- data %&gt;% transmute(id, group = \"test\")\nrow_groups &lt;- tibble(Group = \"Test\", group = \"test\")"
  },
  {
    "objectID": "articles/example_mtcars/index.html#palettes",
    "href": "articles/example_mtcars/index.html#palettes",
    "title": "Example: mtcars",
    "section": "Palettes",
    "text": "Palettes\nDetermine palettes\n\npalettes &lt;- tribble(\n  ~palette,             ~colours,\n  \"overall\",            grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Greys\")[-1]))(101),\n  \"palette1\",           grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Blues\") %&gt;% c(\"#011636\")))(101),\n  \"palette2\",           grDevices::colorRampPalette(rev(RColorBrewer::brewer.pal(9, \"Reds\")[-8:-9]))(101)\n)"
  },
  {
    "objectID": "articles/example_mtcars/index.html#funky-heatmap",
    "href": "articles/example_mtcars/index.html#funky-heatmap",
    "title": "Example: mtcars",
    "section": "Funky heatmap",
    "text": "Funky heatmap\nGenerate funky heatmap\n\ng &lt;- funky_heatmap(\n  data = data,\n  column_info = column_info,\n  column_groups = column_groups,\n  row_info = row_info,\n  row_groups = row_groups,\n  palettes = palettes,\n  expand = list(xmax = 4)\n)\n\nWarning in funky_heatmap(data = data, column_info = column_info, column_groups\n= column_groups, : Argument `expand` is deprecated. Use\n`position_arguments(expand_* = ...)` instead.\n\n\n! Package `magick` is required to draw images. Skipping columns with geom == \"image\".\n\n\n\ng\n\n\n\n\nfunkyheatmap automatically recommends a width and height for the generated plot. To save your plot, run:\nggsave(\"path_to_plot.pdf\", g, device = cairo_pdf, width = g$width, height = g$height)"
  },
  {
    "objectID": "articles/features.html",
    "href": "articles/features.html",
    "title": "Cross-language feature support",
    "section": "",
    "text": "This is a high-level overview of the features available in funkyheatmap. This section will be updated such that only a checkmark appears if all of the unit tests have been implemented and succeed.\nid\ndescription\nR\nPython\nJS\n\n\n\n\nData input\nAllows for input of a data frame with items by row and features in the columns.\n✓\n✓\n✓\n\n\nColumn info\nProvides customization of columns, including geom, group, palette, and more.\n✓\n✓\n✓\n\n\nRow info\nAllows for grouping and annotating rows.\n✓\n✓\n✓\n\n\nColumn groups\nAllows for grouping and annotating column groups.\n✓\n✓\n✓\n\n\nRow groups\nAllows for grouping and annotating row groups.\n✓\n✓\n✓\n\n\nPalettes\nSupports custom and standard color palettes for the heatmap.\n✓\n✓\n✓\n\n\nGeom: funkyrect\nSupports ‘funkyrect’ geometry.\n✓\n✓\n✓\n\n\nGeom: circle\nSupports ‘circle’ geometry.\n✓\n✓\n✓\n\n\nGeom: rect\nSupports ‘rect’ geometry.\n✓\n✓\n✓\n\n\nGeom: bar\nSupports ‘bar’ geometry.\n✓\n✓\n✓\n\n\nGeom: pie\nSupports ‘pie’ geometry.\n✓\n✓\n✓\n\n\nGeom: text\nSupports ‘text’ geometry.\n✓\n✓\n✓\n\n\nGeom: image\nSupports ‘image’ geometry.\n✓\n✓\n✓\n\n\nNumerical transformations\nProvides transformation capabilities for numerical columns.\n✓\n✓\n✓\n\n\nPositioning options\nOptions to control the positioning of various elements in the plot.\n✓\n✓\n✓\n\n\nSubfigure labels\nEnables adding subfigure labels to different column groups.\n✓\n✓\n✓\n\n\nRemoved entries\nSupports removing specified entries from rows and replacing them with a label.\n✓\n✓\n✓\n\n\nLabel on hover\nAllow hovering over a result to see a label\n\n\n✓\n\n\nDynamic sort\nAllow sorting by clicking on the column name\n\n\n✓"
  },
  {
    "objectID": "articles/features.html#unit-tests",
    "href": "articles/features.html#unit-tests",
    "title": "Cross-language feature support",
    "section": "Unit tests",
    "text": "Unit tests\nThis table will be used to check whether each of these tests were implemented in each of the different funkyheatmap implementations.\n\n\n\n\n\n\n\n\n\n\nname\nfeature_id\ndescription\n\n\n\n\nTest data input validity\nData input\nTest whether the function handles valid data frame input correctly.\n\n\nTest data input error handling\nData input\nTest the function’s error handling when provided with an invalid data frame input.\n\n\nTest column info validity\nColumn info\nTest if the function processes valid column information correctly.\n\n\nTest column info error handling\nColumn info\nTest the function’s error handling when provided with invalid column information.\n\n\nTest row info validity\nRow info\nTest if the function processes valid row information correctly.\n\n\nTest row info error handling\nRow info\nTest the function’s error handling when provided with invalid row information.\n\n\nTest column groups validity\nColumn groups\nTest if the function processes valid column groups correctly.\n\n\nTest column groups error handling\nColumn groups\nTest the function’s error handling when provided with invalid column groups.\n\n\nTest row groups validity\nRow groups\nTest if the function processes valid row groups correctly.\n\n\nTest row groups error handling\nRow groups\nTest the function’s error handling when provided with invalid row groups.\n\n\nTest palette custom validity\nPalettes\nTest if the function handles valid custom palettes correctly.\n\n\nTest palette standard validity\nPalettes\nTest if the function handles valid standard palettes correctly.\n\n\nTest palette error handling\nPalettes\nTest the function’s error handling when provided with invalid palettes.\n\n\nTest geom funkyrect validity\nGeom: funkyrect\nTest if the function correctly renders ‘funkyrect’ geometry.\n\n\nTest geom circle validity\nGeom: circle\nTest if the function correctly renders ‘circle’ geometry.\n\n\nTest geom rect validity\nGeom: rect\nTest if the function correctly renders ‘rect’ geometry.\n\n\nTest geom bar validity\nGeom: bar\nTest if the function correctly renders ‘bar’ geometry.\n\n\nTest geom pie validity\nGeom: pie\nTest if the function correctly renders ‘pie’ geometry.\n\n\nTest geom text validity\nGeom: text\nTest if the function correctly renders ‘text’ geometry.\n\n\nTest geom image validity\nGeom: image\nTest if the function correctly renders ‘image’ geometry.\n\n\nTest numerical transformations\nNumerical transformations\nTest if the function applies numerical transformations correctly.\n\n\nTest positioning options\nPositioning options\nTest if the function handles positioning options like hjust, vjust, size, label correctly.\n\n\nTest subfigure labels\nSubfigure labels\nTest if the function correctly adds subfigure labels to different column groups.\n\n\nTest removed entries\nRemoved entries\nTest if the function correctly removes specified entries from rows and replaces them with a label.\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nStill need to implement each of these unit tests. The labels might need to be renamed accordingly."
  }
]